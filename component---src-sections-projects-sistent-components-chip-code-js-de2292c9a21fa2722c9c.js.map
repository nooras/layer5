{"version":3,"file":"component---src-sections-projects-sistent-components-chip-code-js-de2292c9a21fa2722c9c.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js","webpack://Layer5/./src/sections/Projects/Sistent/components/chip/code.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { Chip, SistentThemeProvider, DesignIcon } from \"@sistent/sistent\";\nimport { CodeBlock } from \"../button/code-block\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  `  <SistentThemeProvider>\n       <Chip label=\"Basic Chip\" />\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Chip label=\"Clickable\" clickable />\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Chip label=\"Deletable\" onDelete={() => {}} />\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Chip label=\"Filled\" variant=\"filled\" />\n       <Chip label=\"Outlined\" variant=\"outlined\" />\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Chip label=\"Small\" size=\"small\" />\n       <Chip label=\"Medium\" size=\"medium\" />\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Chip label=\"Design\" variant=\"outlined\" icon={<DesignIcon />} />\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Chip label=\"Primary\" color=\"primary\" />\n       <Chip label=\"Secondary\" color=\"secondary\" />\n       <Chip label=\"Success\" color=\"success\" />\n       <Chip label=\"Error\" color=\"error\" />\n  </SistentThemeProvider>`,\n];\n\nconst ChipCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Chip\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Chip</h2>\n        </a>\n        <p>\n          Chips are compact elements that represent an input, attribute, or action.\n          They allow users to enter information, make selections, filter content, or trigger actions.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/chip\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/chip\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/chip/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/chip/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/chip/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/chip/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Chips can be used to display information, enable user interaction,\n            and provide a way to input or filter data.\n          </p>\n          <a id=\"Basic Chip\">\n            <h2>Basic Chip</h2>\n          </a>\n          <p>The chip comes in different types: Basic, Clickable, and Deletable.</p>\n          <h3>Basic Chip</h3>\n          <p>\n            Basic chips display simple information and are typically non-interactive.\n            They're useful for showing tags, categories, or labels.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Chip label=\"Basic Chip\" />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"basic-chip\" code={codes[0]} />\n          </div>\n          <h3>Clickable Chip</h3>\n          <p>\n            Clickable chips respond to user interaction and can trigger actions\n            when clicked.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Chip label=\"Clickable\" clickable />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"clickable-chip\" code={codes[1]} />\n          </div>\n          <h3>Deletable Chip</h3>\n          <p>\n            Deletable chips include a delete icon that allows users to remove them.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Chip label=\"Deletable\" onDelete={() => {}} />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"deletable-chip\" code={codes[2]} />\n          </div>\n          <a id=\"Variants\">\n            <h2>Variants</h2>\n          </a>\n          <p>\n            Chips come in different visual styles: filled and outlined.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Chip label=\"Filled\" variant=\"filled\" />\n                <Chip label=\"Outlined\" variant=\"outlined\" />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"chip-variants\" code={codes[3]} />\n          </div>\n          <a id=\"Sizes\">\n            <h2>Sizes</h2>\n          </a>\n          <p>\n            Chips are available in different sizes: small and medium.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Chip label=\"Small\" size=\"small\" />\n                <Chip label=\"Medium\" size=\"medium\" />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"chip-sizes\" code={codes[4]} />\n          </div>\n          <a id=\"Logo Chip\">\n            <h2>Logo Chip</h2>\n          </a>\n          <p>\n            Chips can display icons alongside text labels for enhanced visual identification.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Chip\n                  label=\"Design\"\n                  variant=\"outlined\"\n                  icon={<DesignIcon style={{ marginLeft: \"8px\", marginRight: \"8px\" }} />}\n                  style={{ paddingLeft: \"4px\", margin: \"0 8px\" }}\n                />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"logo-chip\" code={codes[5]} />\n          </div>\n          <a id=\"Colors\">\n            <h2>Colors</h2>\n          </a>\n          <p>\n            Chips can use different colors to convey meaning or status.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Chip label=\"Primary\" color=\"primary\" />\n                <Chip label=\"Secondary\" color=\"secondary\" />\n                <Chip label=\"Success\" color=\"success\" />\n                <Chip label=\"Error\" color=\"error\" />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"chip-colors\" code={codes[6]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default ChipCode;\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","location","pathname","x","key","Link","to","activeClassName","SistentLayout","title","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage","codes","ChipCode","useLocation","isDark","useStyledDarkMode","TabButton","onClick","navigate","SistentThemeProvider","initialMode","Chip","label","clickable","onDelete","variant","size","icon","DesignIcon","style","marginLeft","marginRight","paddingLeft","margin","color"],"sourceRoot":""}