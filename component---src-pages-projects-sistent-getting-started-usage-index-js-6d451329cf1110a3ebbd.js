"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[886],{5168:function(e,t,n){n.d(t,{N:function(){return o}});var a=n(96540),r=n(79147);const o=e=>{let{name:t,code:n}=e;const{0:o,1:l}=(0,a.useState)(!1);return a.createElement("div",{className:"show-code"},a.createElement("input",{type:"checkbox",name:t,id:t,onChange:()=>{l(e=>!e)}}),a.createElement("label",{htmlFor:t,className:"label"},"Show Code"),o&&a.createElement(r.Ay,{codeString:n,language:"javascript"}))}},39741:function(e,t,n){n.r(t),n.d(t,{default:function(){return T}});var a=n(96540),r=n(66054),o=n(91580),l=n(66198),i=n(75851),s=n(22514),c=n(92121),m=n(5168),d=n(48995);const u=[{id:0,link:"#overview",text:"Overview"},{id:1,link:"#theme-provider",text:"Theme Provider"},{id:2,link:"#component-examples",text:"Component Examples"},{id:3,link:"#advanced-usage",text:"Advanced Usage"},{id:4,link:"#best-practices",text:"Best Practices"}],p='import { SistentThemeProvider } from "@sistent/sistent";\nimport { Button } from "@sistent/sistent";\n\nfunction App() {\n  return (\n    <SistentThemeProvider>\n      <Button variant="contained" color="primary">\n        Hello Sistent!\n      </Button>\n    </SistentThemeProvider>\n  );\n}',h='import { SistentThemeProvider } from "@sistent/sistent";\n\nfunction App() {\n  return (\n    <SistentThemeProvider \n      initialMode="dark" // "light" | "dark" | "system"\n    >\n      {/* Your app components go here */}\n      <YourAppContent />\n    </SistentThemeProvider>\n  );\n}',y='import { Button, Stack } from "@sistent/sistent";\n\nfunction ButtonExamples() {\n  return (\n    <Stack direction="row" spacing={2}>\n      <Button variant="contained" color="primary">\n        Contained\n      </Button>\n      <Button variant="outlined" color="secondary">\n        Outlined\n      </Button>\n      <Button variant="text">\n        Text Button\n      </Button>\n      <Button variant="contained" disabled>\n        Disabled\n      </Button>\n    </Stack>\n  );\n}',g='import React, { useState } from "react";\nimport { \n  Card, \n  CardContent, \n  Typography, \n  TextField, \n  Button,\n  Stack,\n  Box\n} from "@sistent/sistent";\n\nfunction ContactForm() {\n  const [formData, setFormData] = useState({\n    name: \'\',\n    email: \'\',\n    message: \'\'\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\'Form submitted:\', formData);\n  };\n\n  const handleChange = (field) => (e) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: e.target.value\n    }));\n  };\n\n  return (\n    <Card sx={{ maxWidth: 500, mx: \'auto\', p: 2 }}>\n      <CardContent>\n        <Typography variant="h5" component="h2" gutterBottom>\n          Get in Touch\n        </Typography>\n        <Typography variant="body2" color="text.secondary" sx={{ mb: 3 }}>\n          Fill out the form below and we\'ll get back to you soon.\n        </Typography>\n        \n        <Box component="form" onSubmit={handleSubmit}>\n          <Stack spacing={3}>\n            <TextField \n              label="Full Name" \n              variant="outlined" \n              fullWidth\n              required\n              value={formData.name}\n              onChange={handleChange(\'name\')}\n            />\n            <TextField \n              label="Email Address" \n              type="email"\n              variant="outlined" \n              fullWidth\n              required\n              value={formData.email}\n              onChange={handleChange(\'email\')}\n            />\n            <TextField \n              label="Message"\n              multiline\n              rows={4}\n              variant="outlined" \n              fullWidth\n              value={formData.message}\n              onChange={handleChange(\'message\')}\n            />\n            <Button \n              type="submit"\n              variant="contained" \n              color="primary"\n              size="large"\n              fullWidth\n            >\n              Send Message\n            </Button>\n          </Stack>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}',E="import { \n  SistentThemeProvider, \n  Button, \n  useTheme,\n  createTheme \n} from \"@sistent/sistent\";\n\n// Custom theme configuration\nconst customTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n      dark: '#115293',\n      light: '#42a5f5',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n  typography: {\n    h1: {\n      fontSize: '2.5rem',\n      fontWeight: 600,\n    },\n  },\n});\n\nfunction ThemedButton() {\n  const theme = useTheme();\n  \n  return (\n    <Button \n      variant=\"contained\"\n      sx={{ \n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        '&:hover': {\n          backgroundColor: theme.palette.primary.dark,\n        },\n        borderRadius: 2,\n        textTransform: 'none',\n      }}\n    >\n      Custom Themed Button\n    </Button>\n  );\n}\n\nfunction App() {\n  return (\n    <SistentThemeProvider theme={customTheme}>\n      <ThemedButton />\n    </SistentThemeProvider>\n  );\n}",v='// ✅ Recommended: Individual component imports\nimport { Button } from "@sistent/sistent";\nimport { TextField } from "@sistent/sistent";\nimport { Card, CardContent } from "@sistent/sistent";\n\n// ✅ Also good: Grouped imports for related components\nimport { \n  Typography,\n  Box,\n  Stack,\n  Container\n} from "@sistent/sistent";\n\n// ❌ Avoid: Importing everything (increases bundle size)\nimport * as Sistent from "@sistent/sistent";',f='import { \n  Button, \n  IconButton, \n  Stack,\n  Tooltip\n} from "@sistent/sistent";\nimport { \n  Search as SearchIcon,\n  Menu as MenuIcon,\n  Download as DownloadIcon,\n  Favorite as FavoriteIcon\n} from "@sistent/sistent";\n\nfunction IconExamples() {\n  return (\n    <Stack direction="row" spacing={2} alignItems="center">\n      {/* Button with start icon */}\n      <Button \n        startIcon={<SearchIcon />} \n        variant="contained"\n      >\n        Search\n      </Button>\n      \n      {/* Button with end icon */}\n      <Button \n        endIcon={<DownloadIcon />} \n        variant="outlined"\n      >\n        Download\n      </Button>\n      \n      {/* Icon-only buttons */}\n      <Tooltip title="Menu">\n        <IconButton aria-label="menu" size="large">\n          <MenuIcon />\n        </IconButton>\n      </Tooltip>\n      \n      <Tooltip title="Add to favorites">\n        <IconButton aria-label="favorite" color="secondary">\n          <FavoriteIcon />\n        </IconButton>\n      </Tooltip>\n    </Stack>\n  );\n}',C='import { \n  Card, \n  CardContent, \n  Typography,\n  Box\n} from "@sistent/sistent";\n\nfunction ResponsiveGrid() {\n  return (\n    <Box sx={{ p: 2 }}>\n      <div style={{ \n        display: "grid", \n        gap: "16px",\n        gridTemplateColumns: "repeat(auto-fit, minmax(150px, 1fr))"\n      }}>\n        <Card>\n          <CardContent>\n            <Typography variant="h6" gutterBottom>\n              Responsive Card 1\n            </Typography>\n            <Typography variant="body2" color="text.secondary">\n              This card adapts to different screen sizes automatically.\n            </Typography>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent>\n            <Typography variant="h6" gutterBottom>\n              Responsive Card 2\n            </Typography>\n            <Typography variant="body2" color="text.secondary">\n              On mobile, cards stack vertically for better readability.\n            </Typography>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent>\n            <Typography variant="h6" gutterBottom>\n              Responsive Card 3\n            </Typography>\n            <Typography variant="body2" color="text.secondary">\n              Grid system provides flexible layouts across all devices.\n            </Typography>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent>\n            <Typography variant="h6" gutterBottom>\n              Responsive Card 4\n            </Typography>\n            <Typography variant="body2" color="text.secondary">\n              Design system ensures visual unity.\n            </Typography>\n          </CardContent>\n        </Card>\n      </div>\n    </Box>\n  );\n}';var x=()=>{const{isDark:e}=(0,c.G)();return a.createElement(o.A,null,a.createElement("div",{className:"page-header-section"},a.createElement("h1",null,"Usage Guide")),a.createElement(l.A,null),a.createElement("div",{className:"page-section"},a.createElement(r.mc,{className:"components-container"},a.createElement("div",{className:"content"},a.createElement("a",{id:"overview"},a.createElement("h2",null,"Overview")),a.createElement("section",null,a.createElement("p",null,"After installing Sistent, you can immediately start using components in your React application. The most important step is wrapping your application with the",a.createElement("code",null," SistentThemeProvider "),"to ensure all components have access to the theme context."),a.createElement(d.Alert,{severity:"info",sx:{my:2}},a.createElement("strong",null,"Prerequisites:")," Ensure you have React 16.8+ and have installed Sistent using",a.createElement("code",{style:{margin:"0 4px"}},"npm install @sistent/sistent")),a.createElement("h3",null,"Quick Start Example"),a.createElement("p",null,"Here's the minimal setup to get started with Sistent:"),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"items"},a.createElement(d.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement(d.Button,{variant:"contained",color:"primary"},"Hello Sistent!"))),a.createElement(m.N,{name:"basic-usage",code:p}))),a.createElement("h2",null,"Theme Provider Setup"),a.createElement("section",{id:"theme-provider"},a.createElement("p",null,"The ",a.createElement("code",null,"SistentThemeProvider")," is the foundation of your Sistent application. It provides theme context, manages color modes, and ensures consistent styling across all components."),a.createElement("h3",null,"Theme Configuration"),a.createElement("p",null,"Configure your theme provider with various options:"),a.createElement("div",{className:"showcase"},a.createElement(m.N,{name:"Theme-provider",code:h})),a.createElement("div",{className:"parameter-table"},a.createElement("h4",null,"Theme Provider Props"),a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Prop"),a.createElement("th",null,"Type"),a.createElement("th",null,"Default"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,a.createElement("tr",null,a.createElement("td",null,a.createElement("code",null,"initialMode")),a.createElement("td",null,a.createElement("code",null,'"light" | "dark" | "system"')),a.createElement("td",null,a.createElement("code",null,'"system"')),a.createElement("td",null,"Sets the initial color mode")),a.createElement("tr",null,a.createElement("td",null,a.createElement("code",null,"theme")),a.createElement("td",null,a.createElement("code",null,"Theme")),a.createElement("td",null,"Default theme"),a.createElement("td",null,"Custom theme object")),a.createElement("tr",null,a.createElement("td",null,a.createElement("code",null,"children")),a.createElement("td",null,a.createElement("code",null,"ReactNode")),a.createElement("td",null,"-"),a.createElement("td",null,"Your application components"))))),a.createElement(d.Alert,{severity:"warning",sx:{my:3}},a.createElement("strong",null,"Important:")," Place the ",a.createElement("code",null,"SistentThemeProvider")," at the root of your component tree, typically in your ",a.createElement("code",null,"App.js")," or ",a.createElement("code",null,"index.js")," file.")),a.createElement("section",{id:"component-examples"},a.createElement("h2",null,"Component Examples"),a.createElement("p",null,"Explore practical examples of Sistent components with different configurations and use cases."),a.createElement("h3",null,"Button Variations"),a.createElement("p",null,"Sistent provides multiple button variants, colors, and sizes to fit different design needs:"),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"items"},a.createElement(d.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement("div",{style:{display:"flex",gap:"12px",flexWrap:"wrap",alignItems:"center"}},a.createElement(d.Button,{variant:"contained",color:"primary"},"Contained"),a.createElement(d.Button,{variant:"outlined",color:"secondary"},"Outlined"),a.createElement(d.Button,{variant:"text"},"Text Button"),a.createElement(d.Button,{variant:"contained",disabled:!0},"Disabled")))),a.createElement(m.N,{name:"button-variants",code:y})),a.createElement("h3",null,"Interactive Form Example"),a.createElement("p",null,"A complete form example showcasing multiple components working together:"),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"items"},a.createElement(d.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement(d.Card,{sx:{maxWidth:500,mx:"auto"}},a.createElement(d.CardContent,null,a.createElement(d.Typography,{variant:"h5",component:"h2",gutterBottom:!0},"Get in Touch"),a.createElement(d.Typography,{variant:"body2",color:"text.secondary",sx:{mb:3}},"Fill out the form below and we'll get back to you soon."),a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"16px"}},a.createElement(d.TextField,{label:"Full Name",variant:"outlined",fullWidth:!0,size:"small"}),a.createElement(d.TextField,{label:"Email Address",type:"email",variant:"outlined",fullWidth:!0,size:"small"}),a.createElement(d.TextField,{label:"Message",multiline:!0,rows:3,variant:"outlined",fullWidth:!0,size:"small"}),a.createElement(d.Button,{variant:"contained",color:"primary",fullWidth:!0,sx:{mt:1}},"Send Message")))))),a.createElement(m.N,{name:"form-example",code:g}))),a.createElement("h2",null,"Advanced Usage"),a.createElement("section",{id:"advanced-usage"},a.createElement("h3",null,"Theme Customization"),a.createElement("p",null,"Create custom themes and use the theme hook for advanced styling:"),a.createElement("div",{className:"showcase"},a.createElement(m.N,{name:"theme-customization",code:E})),a.createElement("h3",null,"Import Strategies"),a.createElement("p",null,"Optimize your bundle size with smart import strategies:"),a.createElement("div",{className:"showcase"},a.createElement(m.N,{name:"import-strategies",code:v})),a.createElement("h3",null,"Working with Icons"),a.createElement("p",null,"Integrate Sistent's comprehensive icon library:"),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"items"},a.createElement(d.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement("div",{style:{display:"flex",gap:"12px",alignItems:"center",flexWrap:"wrap"}},a.createElement(d.Button,{startIcon:"🔍",variant:"contained"},"Search"),a.createElement(d.Button,{endIcon:"📥",variant:"outlined"},"Download"),a.createElement(d.Button,{variant:"text"},"Menu ☰"),a.createElement(d.Button,{variant:"contained",color:"secondary"},"❤️")))),a.createElement(m.N,{name:"icon-usage",code:f})),a.createElement("h3",null,"Responsive Design"),a.createElement("p",null,"Build responsive layouts with Sistent's grid system and breakpoint utilities:"),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"items"},a.createElement(d.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement("div",{style:{padding:"16px",backgroundColor:e?"#1a1a1a":"#f5f5f5",borderRadius:"8px"}},a.createElement("div",{style:{display:"grid",gap:"16px",gridTemplateColumns:"repeat(auto-fit, minmax(150px, 1fr))"}},a.createElement(d.Card,null,a.createElement(d.CardContent,null,a.createElement(d.Typography,{variant:"h6",gutterBottom:!0},"Responsive Card 1"),a.createElement(d.Typography,{variant:"body2",color:"text.secondary"},"This card adapts to different screen sizes automatically."))),a.createElement(d.Card,null,a.createElement(d.CardContent,null,a.createElement(d.Typography,{variant:"h6",gutterBottom:!0},"Responsive Card 2"),a.createElement(d.Typography,{variant:"body2",color:"text.secondary"},"On mobile, cards stack vertically for better readability."))),a.createElement(d.Card,null,a.createElement(d.CardContent,null,a.createElement(d.Typography,{variant:"h6",gutterBottom:!0},"Responsive Card 3"),a.createElement(d.Typography,{variant:"body2",color:"text.secondary"},"Grid system provides flexible layouts across all devices."))),a.createElement(d.Card,null,a.createElement(d.CardContent,null,a.createElement(d.Typography,{variant:"h6",gutterBottom:!0},"Responsive Card 4"),a.createElement(d.Typography,{variant:"body2",color:"text.secondary"},"Design system ensures visual unity."))))))),a.createElement(m.N,{name:"responsive-usage",code:C}))),a.createElement("h2",null,"Best Practices"),a.createElement("section",{id:"best-practices"},a.createElement("ul",null,a.createElement("li",null,a.createElement("strong",null,"Theme Provider:")," Always wrap your application root with ",a.createElement("code",null,"SistentThemeProvider"),". Place it as high as possible in your component tree to ensure all components have access to the theme context."),a.createElement("li",null,a.createElement("strong",null,"Import Optimization:")," Import only the components you need to keep your bundle size minimal. Use individual imports or group related components together rather than importing everything."),a.createElement("li",null,a.createElement("strong",null,"Consistent Design:")," Use consistent component variants, colors, and sizing throughout your application. Create reusable component wrappers for commonly used patterns."),a.createElement("li",null,a.createElement("strong",null,"Mobile-First:")," Leverage Sistent's responsive utilities and breakpoints to create mobile-first designs. Test your components across different screen sizes."),a.createElement("li",null,a.createElement("strong",null,"Accessibility:")," Take advantage of Sistent's built-in accessibility features. Always provide proper labels, ARIA attributes, and ensure adequate color contrast."),a.createElement("li",null,a.createElement("strong",null,"Theme Customization:")," Use design tokens and theme customization for styling rather than overriding CSS directly. This ensures consistency and easier maintenance.")),a.createElement(d.Alert,{severity:"success",sx:{my:3}},a.createElement("strong",null,"Pro Tip:")," Create a custom hook to manage commonly used theme values and component configurations across your application."))),a.createElement(s.A,null)),a.createElement(i.A,{contents:u})))};var T=()=>a.createElement(x,null)},75851:function(e,t,n){var a=n(96540),r=n(64810);const o=n(21250).default.div.withConfig({displayName:"intra-page__JoinCommunityWrapper",componentId:"sc-42m33g-0"})(["\n  @media screen and (min-width: 300px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n"]);t.A=function(e){let{contents:t}=e;const{0:n,1:l}=(0,a.useState)(null);return(0,a.useEffect)(()=>{const e=window.location.pathname;l(e)},[]),a.createElement(o,null,a.createElement("div",{className:"intra-page"},a.createElement("ul",null,t.map(e=>a.createElement("li",{key:e.id,className:"list"},a.createElement(r.Link,{to:""+n+e.link,key:e.id,activeClassName:"active"},e.text))))))}}}]);
//# sourceMappingURL=component---src-pages-projects-sistent-getting-started-usage-index-js-6d451329cf1110a3ebbd.js.map