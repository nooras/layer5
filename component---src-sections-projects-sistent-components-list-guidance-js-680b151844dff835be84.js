"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[2755],{9184:function(e,t,n){n.d(t,{p:function(){return m}});var l=n(96540),a=n(91580),i=n(66198),s=n(66054),r=n(22514),c=n(64810);const o=n(21250).default.div.withConfig({displayName:"intra-page__JoinCommunityWrapper",componentId:"sc-q3x19t-0"})(["\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n"]);var u=function(){const{0:e,1:t}=(0,l.useState)([]);(0,l.useEffect)(()=>{const e=document.querySelectorAll(".main-content > a");console.log(e),e&&t(Array.from(e).map(e=>({id:e.id,link:"#"+e.id,text:e.id})))},[]);const{0:n,1:a}=(0,l.useState)(null);return(0,l.useEffect)(()=>{const e=window.location.pathname;a(e)},[]),l.createElement(o,null,l.createElement("div",{className:"intra-page"},l.createElement("ul",null,e.map(e=>l.createElement("li",{key:e.id,className:"list"},l.createElement(c.Link,{to:""+n+e.link,key:e.id,activeClassName:"active"},e.text))))))};const m=e=>{let{title:t,children:n}=e;return l.createElement(a.A,null,l.createElement("div",{className:"page-header-section"},l.createElement("h1",null,t)),l.createElement(i.A,null),l.createElement("div",{className:"page-section"},l.createElement(s.mc,null,n," ",l.createElement(r.A,null)),l.createElement(u,null)))}},55371:function(e,t,n){n.r(t);var l=n(96540),a=n(64810),i=n(86462),s=n(9184),r=n(96044);t.default=()=>{const e=(0,i.useLocation)();return l.createElement(s.p,{title:"List"},l.createElement("div",{className:"content"},l.createElement("a",{id:"Identity"},l.createElement("h2",null,"List")),l.createElement("p",null,"Lists are essential UI elements that allow items to be organized sequentially in a structured and readable way. They help users view, select, and interact with multiple items conveniently."),l.createElement("div",{className:"filterBtns"},l.createElement(r.default,{className:"/projects/sistent/components/list"===e.pathname?"active":"",onClick:()=>(0,a.navigate)("/projects/sistent/components/list"),title:"Overview"}),l.createElement(r.default,{className:"/projects/sistent/components/list/guidance"===e.pathname?"active":"",onClick:()=>(0,a.navigate)("/projects/sistent/components/list/guidance"),title:"Guidance"}),l.createElement(r.default,{className:"/projects/sistent/components/list/code"===e.pathname?"active":"",onClick:()=>(0,a.navigate)("/projects/sistent/components/list/code"),title:"Code"})),l.createElement("div",{className:"main-content"},l.createElement("p",null,"Lists can be used for various purposes, including displaying items, navigational menus, or highlighting features. The List component provides a flexible container for organizing related items in a vertical layout. It can be customized to display items with icons, buttons, avatars, and other interactive elements. This component is essential for organizing content in a structured, accessible format."),l.createElement("a",{id:"Usage Scenarios"},l.createElement("h2",null,"Usage Scenarios")),l.createElement("ul",null,l.createElement("li",null,"Data Display : Present structured data like files, tasks, or messages using Lists."),l.createElement("li",null,"Navigational Menus : Combine List Items with Buttons or Links for intuitive menus."),l.createElement("li",null,"Interactive Content : Add action buttons to List Items for task management or settings. ")),l.createElement("a",{id:"Design Guidelines"},l.createElement("h2",null,"Design Guidelines")),l.createElement("p",null,"Consistency"),l.createElement("ul",null,l.createElement("li",null,"Maintain a uniform structure across all List Items."),l.createElement("li",null,"Use consistent padding and alignment for easy readability.")),l.createElement("p",null,"Interactive Elements"),l.createElement("ul",null,l.createElement("li",null,"Use ListItemButton for click actions."),l.createElement("li",null," Ensure hover states and focus indicators are visually prominent.")),l.createElement("p",null,"Accessibility"),l.createElement("ul",null,l.createElement("li",null,"Provide descriptive labels for screen readers."),l.createElement("li",null,"Ensure all items are navigable via keyboard.")),l.createElement("a",{id:"General Guidelines"},l.createElement("h2",null,"General Guidelines")),l.createElement("p",null,"1. Purpose & Context"),l.createElement("ul",null,l.createElement("li",null,"Clearly define the purpose of the List (e.g., data grouping, navigation, task management)."),l.createElement("li",null,"Use Lists where a vertical layout enhances user understanding or accessibility.")),l.createElement("p",null,"2. Spacing & Alignment"),l.createElement("ul",null,l.createElement("li",null,"Maintain consistent vertical spacing between items."),l.createElement("li",null,"Align text, icons, and avatars for a clean, organized appearance."),l.createElement("li",null,"Consistent spacing and alignment ensure list items are visually pleasing and easy to scan. Items should be aligned to the left, with adequate padding between elements.")),l.createElement("p",null,"3. Interactive Design"),l.createElement("ul",null,l.createElement("li",null,"For interactive Lists, use actionable items like ListItemButton and ensure buttons or links have proper visual cues (hover/focus states)."),l.createElement("li",null,"Add affordances like icons or colors to signify item state (e.g., completed, active, or disabled).")),l.createElement("p",null,"4. Accessibility"),l.createElement("ul",null,l.createElement("li",null,"Label all List Items using aria-label or aria-labelledby attributes for screen readers."),l.createElement("li",null,"Ensure all interactive elements within a List are keyboard-navigable and have clear focus indicators.")),l.createElement("a",{id:"Component-Specific Guidance"},l.createElement("h2",null,"Component-Specific Guidance")),l.createElement("p",null,"1. List"),l.createElement("ul",null,l.createElement("li",null,"Use the List component as a wrapper for items, ensuring adequate padding and structure."),l.createElement("li",null,"Keep Lists concise; avoid excessive scrolling by grouping items with ListSubheader.")),l.createElement("p",null,"2. List Item"),l.createElement("ul",null,l.createElement("li",null,"Limit content to 1-2 lines of text for readability."),l.createElement("li",null,"Use secondary text sparingly to avoid visual clutter.")),l.createElement("p",null,"3. List Item Button"),l.createElement("ul",null,l.createElement("li",null,"Ensure actionable buttons have a clear purpose, communicated via labels or icons."),l.createElement("li",null,"Avoid excessive buttons in a single List to prevent overwhelming users.")),l.createElement("p",null,"4. List Item Icon"),l.createElement("ul",null,l.createElement("li",null,"Icons should be meaningful and contextually relevant (e.g., CheckIcon for completed tasks, NotificationsIcon for notifications)."),l.createElement("li",null,"Align and size icons appropriately relative to the text.")),l.createElement("p",null,"5. List Item Avatar"),l.createElement("ul",null,l.createElement("li",null,"Use avatars to represent users or entities visually"),l.createElement("li",null,"Provide accessible alternatives (e.g., initials or placeholders) when images are unavailable.")),l.createElement("p",null,"6. List Item Text"),l.createElement("ul",null,l.createElement("li",null,"Maintain a clear hierarchy between primaryText (main content) and secondaryText (supporting details)."),l.createElement("li",null,"Ensure text is legible and does not dominate the layout.")),l.createElement("p",null,"7. List Subheader"),l.createElement("ul",null,l.createElement("li",null,"Subheaders should describe the group of items succinctly."),l.createElement("li",null,"Avoid excessive nesting of subheaders to prevent user confusion.")))))}}}]);
//# sourceMappingURL=component---src-sections-projects-sistent-components-list-guidance-js-680b151844dff835be84.js.map