{"version":3,"file":"component---src-sections-projects-sistent-components-grid-guidance-js-d2616ada3d01a9c53da7.js","mappings":"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","sources":["webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js","webpack://Layer5/./src/sections/Projects/Sistent/components/grid/guidance.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport { SistentThemeProvider, Grid2, Box, Avatar } from \"@sistent/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\n// Demo Item component for examples\nconst Item = ({ children, sx = {} }) => (\n  <Box\n    sx={{\n      p: 1,\n      backgroundColor: \"primary.main\",\n      color: \"primary.contrastText\",\n      textAlign: \"center\",\n      borderRadius: 1,\n      ...sx,\n    }}\n  >\n    {children}\n  </Box>\n);\n\nconst GridGuidance = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Grid\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Grid</h2>\n        </a>\n        <p>\n          The responsive layout grid adapts to screen size and orientation,\n          ensuring consistency across layouts. It uses CSS Flexbox for high\n          flexibility and provides a 12-column system with customizable breakpoints.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/grid\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/grid\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/grid/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/grid/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/grid/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/grid/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            For effective use of the Grid system, it's important to understand\n            responsive design principles and how to structure layouts that adapt\n            gracefully across different screen sizes.\n          </p>\n\n          <a id=\"Layout Patterns\">\n            <h2>Layout Patterns</h2>\n          </a>\n          <p>\n            The Grid component supports various layout patterns that are commonly\n            used in responsive web design.\n          </p>\n\n          <h3>Container and Items</h3>\n          <p>\n            Every grid layout consists of a container (parent) and items (children).\n            The container establishes the grid context and handles spacing, while\n            items define how much space they occupy within that context.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container spacing={2} sx={{ width: \"100%\", maxWidth: 600, border: \"2px dashed\", borderColor: \"grey.400\", p: 1 }}>\n                <Grid2 size={4}>\n                  <Item>Item 1</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 2</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 3</Item>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>Responsive Design</h3>\n          <p>\n            Design layouts that work across all screen sizes by using responsive\n            breakpoints. Start with mobile-first design and progressively enhance\n            for larger screens.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container spacing={2} sx={{ width: \"100%\", maxWidth: 600 }}>\n                <Grid2 size={{ xs: 12, sm: 6, md: 4 }}>\n                  <Item>Responsive</Item>\n                </Grid2>\n                <Grid2 size={{ xs: 12, sm: 6, md: 4 }}>\n                  <Item>Grid</Item>\n                </Grid2>\n                <Grid2 size={{ xs: 12, sm: 12, md: 4 }}>\n                  <Item>Items</Item>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Spacing Guidelines\">\n            <h2>Spacing Guidelines</h2>\n          </a>\n          <p>\n            Consistent spacing creates visual harmony and improves readability.\n            Use the spacing system to maintain consistent gaps between grid items.\n          </p>\n\n          <h3>Uniform Spacing</h3>\n          <p>\n            Use consistent spacing values throughout your layout. The spacing prop\n            accepts values that correspond to your theme's spacing scale.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Box sx={{ width: \"100%\", maxWidth: 600 }}>\n                <Box sx={{ mb: 2 }}>\n                  <Grid2 container spacing={1}>\n                    <Grid2 size={6}><Item>Spacing: 1</Item></Grid2>\n                    <Grid2 size={6}><Item>Spacing: 1</Item></Grid2>\n                  </Grid2>\n                </Box>\n                <Box sx={{ mb: 2 }}>\n                  <Grid2 container spacing={2}>\n                    <Grid2 size={6}><Item>Spacing: 2</Item></Grid2>\n                    <Grid2 size={6}><Item>Spacing: 2</Item></Grid2>\n                  </Grid2>\n                </Box>\n                <Grid2 container spacing={3}>\n                  <Grid2 size={6}><Item>Spacing: 3</Item></Grid2>\n                  <Grid2 size={6}><Item>Spacing: 3</Item></Grid2>\n                </Grid2>\n              </Box>\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>Row and Column Spacing</h3>\n          <p>\n            For more control, use rowSpacing and columnSpacing to set different\n            spacing values for rows and columns independently.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container rowSpacing={1} columnSpacing={3} sx={{ width: \"100%\", maxWidth: 600 }}>\n                <Grid2 size={6}>\n                  <Item>Item 1</Item>\n                </Grid2>\n                <Grid2 size={6}>\n                  <Item>Item 2</Item>\n                </Grid2>\n                <Grid2 size={6}>\n                  <Item>Item 3</Item>\n                </Grid2>\n                <Grid2 size={6}>\n                  <Item>Item 4</Item>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Content Alignment\">\n            <h2>Content Alignment</h2>\n          </a>\n          <p>\n            Proper alignment ensures content is visually balanced and easy to scan.\n            Use alignment properties to center content within grid items.\n          </p>\n\n          <h3>Centered Content</h3>\n          <p>\n            To center content within grid items, specify display=\"flex\" on the item\n            and use justifyContent and alignItems to control positioning.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container spacing={2} sx={{ width: \"100%\", maxWidth: 600 }} minHeight={120}>\n                <Grid2\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  size=\"grow\"\n                  sx={{ border: \"1px dashed\", borderColor: \"grey.400\" }}\n                >\n                  <Avatar sx={{ bgcolor: \"primary.main\" }}>A</Avatar>\n                </Grid2>\n                <Grid2\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  size=\"grow\"\n                  sx={{ border: \"1px dashed\", borderColor: \"grey.400\" }}\n                >\n                  <Avatar sx={{ bgcolor: \"secondary.main\" }}>B</Avatar>\n                </Grid2>\n                <Grid2\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  size=\"grow\"\n                  sx={{ border: \"1px dashed\", borderColor: \"grey.400\" }}\n                >\n                  <Avatar sx={{ bgcolor: \"error.main\" }}>C</Avatar>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Direction Control\">\n            <h2>Direction Control</h2>\n          </a>\n          <p>\n            The direction prop controls the flex-direction of the grid container,\n            determining how grid items are arranged. Understanding direction is\n            crucial for creating flexible layouts that adapt to different content needs.\n          </p>\n\n          <h3>Row Direction (Default)</h3>\n          <p>\n            The default direction is 'row', which arranges items horizontally from\n            left to right. This is ideal for most standard grid layouts.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container spacing={2} direction=\"row\" sx={{ width: \"100%\", maxWidth: 600 }}>\n                <Grid2 size={3}>\n                  <Item>1</Item>\n                </Grid2>\n                <Grid2 size={3}>\n                  <Item>2</Item>\n                </Grid2>\n                <Grid2 size={3}>\n                  <Item>3</Item>\n                </Grid2>\n                <Grid2 size={3}>\n                  <Item>4</Item>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>Column Direction</h3>\n          <p>\n            Use direction=\"column\" to arrange items vertically. This is useful for\n            sidebar layouts, vertical navigation, or when you want items to stack\n            regardless of screen size.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container spacing={2} direction=\"column\" sx={{ width: \"100%\", maxWidth: 200, height: 300 }}>\n                <Grid2 size=\"grow\">\n                  <Item>1</Item>\n                </Grid2>\n                <Grid2 size=\"grow\">\n                  <Item>2</Item>\n                </Grid2>\n                <Grid2 size=\"grow\">\n                  <Item>3</Item>\n                </Grid2>\n                <Grid2 size=\"grow\">\n                  <Item>4</Item>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Wrap Behavior\">\n            <h2>Wrap Behavior</h2>\n          </a>\n          <p>\n            The wrap prop controls how grid items behave when they exceed the\n            container width. Understanding wrap behavior helps you create layouts\n            that handle varying amounts of content gracefully.\n          </p>\n\n          <h3>Wrap (Default)</h3>\n          <p>\n            The default wrap=\"wrap\" behavior allows items to wrap to new lines\n            when the container width is exceeded. This ensures responsive behavior\n            and prevents horizontal overflow.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container spacing={2} wrap=\"wrap\" sx={{ width: \"100%\", maxWidth: 300 }}>\n                <Grid2 size={4}>\n                  <Item>Item 1</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 2</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 3</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 4</Item>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>No Wrap</h3>\n          <p>\n            Use wrap=\"nowrap\" to prevent items from wrapping. This keeps all items\n            on a single line but may cause horizontal overflow. Use with caution\n            and consider adding overflow handling.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid2 container spacing={2} wrap=\"nowrap\" sx={{ width: \"100%\", maxWidth: 300, overflow: \"auto\" }}>\n                <Grid2 size={4}>\n                  <Item>Item 1</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 2</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 3</Item>\n                </Grid2>\n                <Grid2 size={4}>\n                  <Item>Item 4</Item>\n                </Grid2>\n              </Grid2>\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Best Practices\">\n            <h2>Best Practices</h2>\n          </a>\n          <p>\n            Follow these guidelines to create effective and maintainable grid layouts:\n          </p>\n          <ul>\n            <li>\n              <strong>Use Semantic Structure:</strong> Organize grid items in a logical order\n              that makes sense when viewed linearly on smaller screens.\n            </li>\n            <li>\n              <strong>Avoid Deep Nesting:</strong> Keep grid structures as flat as possible\n              for better performance and maintainability.\n            </li>\n            <li>\n              <strong>Plan for Content Growth:</strong> Design layouts that can accommodate\n              varying amounts of content without breaking.\n            </li>\n            <li>\n              <strong>Test Across Breakpoints:</strong> Always test your layouts at different\n              screen sizes to ensure they work as expected.\n            </li>\n            <li>\n              <strong>Use Consistent Spacing:</strong> Maintain consistent spacing patterns\n              throughout your application for visual harmony.\n            </li>\n            <li>\n              <strong>Optimize for Performance:</strong> Be mindful of layout shifts and\n              ensure good Core Web Vitals scores.\n            </li>\n          </ul>\n\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default GridGuidance;"],"names":["JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","id","link","text","intapath","setIntapath","path","window","location","pathname","React","className","x","key","Link","to","activeClassName","SistentLayout","_ref","title","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage","Item","sx","Box","_objectSpread","p","backgroundColor","color","textAlign","borderRadius","GridGuidance","useLocation","isDark","useStyledDarkMode","TabButton","onClick","navigate","Row","$Hcenter","SistentThemeProvider","initialMode","Grid2","container","spacing","width","maxWidth","border","borderColor","size","xs","sm","md","mb","rowSpacing","columnSpacing","minHeight","display","justifyContent","alignItems","Avatar","bgcolor","direction","height","wrap","overflow"],"sourceRoot":""}