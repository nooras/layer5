{"version":3,"file":"component---src-sections-projects-sistent-components-grid-code-js-269e3e45d4a6f286312f.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js","webpack://Layer5/./src/sections/Projects/Sistent/components/grid/code.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentThemeProvider, Grid2, Box, Avatar } from \"@sistent/sistent\";\nimport { CodeBlock } from \"../button/code-block\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\n// Demo Item component for examples\nconst Item = ({ children, sx = {} }) => (\n  <Box\n    sx={{\n      p: 1,\n      backgroundColor: \"primary.main\",\n      color: \"primary.contrastText\",\n      textAlign: \"center\",\n      borderRadius: 1,\n      ...sx,\n    }}\n  >\n    {children}\n  </Box>\n);\n\nconst codes = [\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={2}>\n       <Grid2 size={5}>\n        <Item>size=5</Item>\n       </Grid2>\n       <Grid2 size={5}>\n         <Item>size=5</Item>\n       </Grid2>\n       <Grid2 size={6}>\n         <Item>size=6</Item>\n        </Grid2>\n        <Grid2 size={6}>\n          <Item>size=6</Item>\n        </Grid2>        \n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={2}>\n      <Grid2 size={{ xs: 6, md: 8 }}>\n        <Item>xs=6 md=8</Item>\n      </Grid2>\n      <Grid2 size={{ xs: 6, md: 4 }}>\n        <Item>xs=6 md=4</Item>\n      </Grid2>\n      <Grid2 size={{ xs: 6, md: 4 }}>\n        <Item>xs=6 md=4</Item>\n      </Grid2>\n      <Grid2 size={{ xs: 6, md: 8 }}>\n        <Item>xs=6 md=8</Item>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={3}>\n      <Grid2 size={6}>\n        <Item>Item 1</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>Item 2</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>Item 3</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>Item 4</Item>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n      <Grid2 size={6}>\n        <Item>1</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>2</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>3</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>4</Item>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={3}>\n      <Grid2 size=\"grow\">\n        <Item>size=grow</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>size=6</Item>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={3}>\n      <Grid2 size=\"auto\">\n        <Item>size=auto</Item>\n      </Grid2>\n      <Grid2 size={6}>\n        <Item>size=6</Item>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={3}>\n      <Grid2 size={{ xs: 6, md: 2 }} offset={{ xs: 3, md: 0 }}>\n        <Item>1</Item>\n      </Grid2>\n      <Grid2 size={{ xs: 4, md: 2 }} offset={{ md: 'auto' }}>\n        <Item>2</Item>\n      </Grid2>\n      <Grid2 size={{ xs: 4, md: 2 }} offset={{ xs: 4, md: 0 }}>\n        <Item>3</Item>\n      </Grid2>\n      <Grid2 size={{ xs: 'grow', md: 6 }} offset={{ md: 2 }}>\n        <Item>4</Item>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={2} minHeight={160}>\n      <Grid2 \n        display=\"flex\" \n        justifyContent=\"center\" \n        alignItems=\"center\" \n        size=\"grow\"\n      >\n        <Avatar sx={{ bgcolor: 'primary.main' }}>A</Avatar>\n      </Grid2>\n      <Grid2 \n        display=\"flex\" \n        justifyContent=\"center\" \n        alignItems=\"center\"\n      >\n        <Avatar sx={{ bgcolor: 'secondary.main' }}>B</Avatar>\n      </Grid2>\n      <Grid2 \n        display=\"flex\" \n        justifyContent=\"center\" \n        alignItems=\"center\" \n        size=\"grow\"\n      >\n        <Avatar sx={{ bgcolor: 'error.main' }}>C</Avatar>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n  `  <SistentThemeProvider>\n    <Grid2 container spacing={2} direction=\"column\" sx={{ height: 300 }}>\n      <Grid2>\n        <Item>Item 1</Item>\n      </Grid2>\n      <Grid2>\n        <Item>Item 2</Item>\n      </Grid2>\n      <Grid2>\n        <Item>Item 3</Item>\n      </Grid2>\n      <Grid2>\n        <Item>Item 4</Item>\n      </Grid2>\n    </Grid2>\n  </SistentThemeProvider>`,\n\n];\n\nconst GridCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Grid\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Grid</h2>\n        </a>\n        <p>\n          The responsive layout grid adapts to screen size and orientation,\n          ensuring consistency across layouts. It uses CSS Flexbox for high\n          flexibility and provides a 12-column system with customizable breakpoints.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/grid\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/grid\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/grid/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/grid/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/grid/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/grid/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            The Grid component provides a flexible foundation for creating\n            responsive layouts. Here are practical code examples showing\n            different usage patterns.\n          </p>\n\n          <a id=\"Basic Grid\">\n            <h2>Basic Grid</h2>\n          </a>\n          <p>\n            Create a basic grid layout with container and size props. The size\n            prop accepts values from 1-12 representing column spans.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={2} sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Grid2 size={5.5}>\n                    <Item>size=5</Item>\n                  </Grid2>\n                  <Grid2 size={5.5}>\n                    <Item>size=5</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>size=6</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>size=6</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"basic-grid\" code={codes[0]} />\n          </div>\n\n          <a id=\"Responsive Grid\">\n            <h2>Responsive Grid</h2>\n          </a>\n          <p>\n            Use breakpoint objects to define different layouts for different screen sizes.\n            Each breakpoint applies to that size and larger unless overridden.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={2} sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Grid2 size={{ xs: 6, md: 8 }}>\n                    <Item>xs=6 md=8</Item>\n                  </Grid2>\n                  <Grid2 size={{ xs: 6, md: 4 }}>\n                    <Item>xs=6 md=4</Item>\n                  </Grid2>\n                  <Grid2 size={{ xs: 6, md: 4 }}>\n                    <Item>xs=6 md=4</Item>\n                  </Grid2>\n                  <Grid2 size={{ xs: 6, md: 8 }}>\n                    <Item>xs=6 md=8</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"responsive-grid\" code={codes[1]} />\n          </div>\n\n          <a id=\"Grid Spacing\">\n            <h2>Grid Spacing</h2>\n          </a>\n          <p>\n            Control the space between grid items using the spacing prop.\n            The value corresponds to theme spacing units.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={3} sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Grid2 size={6}>\n                    <Item>Item 1</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>Item 2</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>Item 3</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>Item 4</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"grid-spacing\" code={codes[2]} />\n          </div>\n\n          <h3>Row and Column Spacing</h3>\n          <p>\n            Use rowSpacing and columnSpacing for independent control over\n            row and column gaps.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }} sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Grid2 size={6}>\n                    <Item>1</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>2</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>3</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>4</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"row-column-spacing\" code={codes[3]} />\n          </div>\n\n          <a id=\"Auto Layout\">\n            <h2>Auto Layout</h2>\n          </a>\n          <p>\n            Use flexible sizing options for dynamic layouts that adapt to content.\n          </p>\n\n          <h3>Growing Columns</h3>\n          <p>\n            Use size=\"grow\" to make columns take up available space equally.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={3} sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Grid2 size=\"grow\">\n                    <Item sx={{ whiteSpace: \"normal\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>size=grow</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>size=6</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"growing-columns\" code={codes[4]} />\n          </div>\n\n          <h3>Variable Width Content</h3>\n          <p>\n            Use size=\"auto\" to size columns based on their content width.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={3} sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Grid2 size=\"auto\">\n                    <Item>size=auto</Item>\n                  </Grid2>\n                  <Grid2 size={6}>\n                    <Item>size=6</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"variable-width\" code={codes[5]} />\n          </div>\n\n          <a id=\"Grid Offset\">\n            <h2>Grid Offset</h2>\n          </a>\n          <p>\n            Use the offset prop to push grid items to the right, creating gaps\n            or asymmetrical layouts.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={3} sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Grid2 size={{ xs: 6, md: 2 }} offset={{ xs: 3, md: 0 }}>\n                    <Item>1</Item>\n                  </Grid2>\n                  <Grid2 size={{ xs: 4, md: 2 }} offset={{ md: \"auto\" }}>\n                    <Item>2</Item>\n                  </Grid2>\n                  <Grid2 size={{ xs: 4, md: 2 }} offset={{ xs: 4, md: 0 }}>\n                    <Item>3</Item>\n                  </Grid2>\n                  <Grid2 size={{ xs: \"grow\", md: 6 }} offset={{ md: 2 }}>\n                    <Item>4</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"grid-offset\" code={codes[6]} />\n          </div>\n\n\n          <a id=\"Centered Content\">\n            <h2>Centered Content</h2>\n          </a>\n          <p>\n            Center content within grid items using flexbox properties directly\n            on the Grid component.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={2} sx={{ width: \"100%\", maxWidth: 600 }} minHeight={160}>\n                  <Grid2\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    size=\"grow\"\n                  >\n                    <Avatar sx={{ bgcolor: \"primary.main\" }}>A</Avatar>\n                  </Grid2>\n                  <Grid2\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                  >\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>B</Avatar>\n                  </Grid2>\n                  <Grid2\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    size=\"grow\"\n                  >\n                    <Avatar sx={{ bgcolor: \"error.main\" }}>C</Avatar>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"centered-content\" code={codes[7]} />\n          </div>\n\n          <a id=\"Column Direction\">\n            <h2>Column Direction</h2>\n          </a>\n          <p>\n            Use the direction=\"column\" prop to stack grid items vertically\n            instead of horizontally.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Grid2 container spacing={2} direction=\"column\" sx={{ height: 300, width: \"100%\", maxWidth: 200 }}>\n                  <Grid2>\n                    <Item>Item 1</Item>\n                  </Grid2>\n                  <Grid2>\n                    <Item>Item 2</Item>\n                  </Grid2>\n                  <Grid2>\n                    <Item>Item 3</Item>\n                  </Grid2>\n                  <Grid2>\n                    <Item>Item 4</Item>\n                  </Grid2>\n                </Grid2>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"column-direction\" code={codes[8]} />\n          </div>\n\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default GridCode;"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","location","pathname","x","key","Link","to","activeClassName","SistentLayout","title","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage","Item","sx","Box","_objectSpread","p","backgroundColor","color","textAlign","borderRadius","codes","GridCode","useLocation","isDark","useStyledDarkMode","TabButton","onClick","navigate","SistentThemeProvider","initialMode","Grid2","container","spacing","width","maxWidth","size","xs","md","rowSpacing","columnSpacing","sm","whiteSpace","overflow","textOverflow","offset","minHeight","display","justifyContent","alignItems","Avatar","bgcolor","direction","height"],"sourceRoot":""}